% <*sty>
% <*@@=ctp>

\NeedsTeXFormat{LaTeX2e}

\ProvidesExplPackage {char2path} {2025-08-01} {v1.0.0}
  {A LaTeX package that converts characters into TikZ paths}

\keys_define:nn { char2path }
  {
    scale   .tl_gset:N = \g_@@_scale_tl,
      scale .initial:n = { 10pt },
  }
\ProcessKeyOptions [ char2path ]

\RequirePackage{tikz, etoolbox}
\patchcmd{\pgfutil@InputIfFileExists}
  { \input #1 }
  {
    \@pushfilename
    \xdef\@currname{#1}
    \input #1
    \@popfilename
  }{}{}
\usetikzlibrary{patterns, fadings, calc}

\cs_new_protected:Npn \@@_msg_new:nn #1#2
  { \msg_new:nnn { char2path } {#1} {#2} }
\cs_new_protected:Npn \@@_msg_warning:n #1
  { \msg_warning:nn { char2path } {#1} }
\cs_new_protected:Npn \@@_msg_error:nn #1#2
  { \msg_error:nne { char2path } {#1} {#2} }
\@@_msg_new:nn { fading } { Unsupport ~ multiple ~ fading ~ directions }
\@@_msg_new:nn { kernel } { file ~ not ~ found }

\tl_const:Nn \c_@@_tikz_folder_tl { font_glyph } % for future use
\fp_const:Nn \c_@@_global_scale_fp { .0135 }
\prop_const_from_keyval:Nn \c_@@_scale_prop
  {
    10pt = 0.820, 11pt = 0.902, 12pt = 0.984, 13pt = 1.066,
    14pt = 1.148, 15pt = 1.230, 16pt = 1.311,
  }

\tl_new:N \l_@@_tikz_data_merge_tl
\cs_new_protected_nopar:Npn \@@_load_font_data:nnn #1#2#3
  {
    \clist_map_inline:nn {#3}
      {
        \file_get:nnNTF
          { ctp-#2-##1.data.tex } { \char_set_catcode:nn { 126 } { 12 } }
          \l_@@_tikz_data_single_tl
          {
            \tl_gput_right:NV \l_@@_tikz_data_merge_tl
              \l_@@_tikz_data_single_tl
          } { \@@_msg_error:nn { kernel } { ctp-#2-##1.data.tex } }
      }
    \exp_args:NnV \prop_const_from_keyval:cn
      { c_@@_tikz_#2_data_prop } { \l_@@_tikz_data_merge_tl }
    \tl_set:cn { l_@@_font_#2_type_tl } {#1}
  }

\cs_new:Npn \@@_protected_char:nn #1#2
  { \cs_new_protected:cpn {#1} { \exp_not:n {#2} } }
\@@_protected_char:nn { ctpbackslash }{ \textbackslash }
\@@_load_font_data:nnn { serif } { lmr }
  { arabic, alpha-small, alpha-caps, others, }
\@@_load_font_data:nnn { mono } { lmm }
  { arabic, alpha-small, alpha-caps, others, }
\@@_load_font_data:nnn { mono } { lms }
  { arabic, alpha-small, alpha-caps, others, }

\box_new:N \l_@@_glyph_box
\clist_new:N \l_@@_continous_color_left_clist
\clist_new:N \l_@@_continous_color_right_clist
\clist_new:N \l_@@_options_clist
\tl_new:N \l_@@_unknown_tl
\keys_define:nn { char2path / chartopath }
  {
    font      .tl_set:N     = \l_@@_char_clip_font,
      font    .initial:n    = { lmm },
    rescan    .bool_set:N   = \l_@@_rescan_bool,
      rescan  .initial:n    = { true },
    draw      .tl_set:N     = \l_@@_draw_tl,
      draw    .initial:n    = { none },
    fill      .tl_set:N     = \l_@@_fill_tl,
    outline   .dim_set:N    = \l_@@_outline_tl,
      outline .initial:n    = { 0pt },
    hfading   .clist_set:N  = \l_@@_hfading_clist,
    vfading   .clist_set:N  = \l_@@_vfading_clist,
    scale     .fp_set:N     = \l_@@_scale_fp,
      scale   .initial:n    = { 1 },
    unknown   .code:n       = \@@_parse_unknown_option:n {#1}
  }
\cs_new_protected_nopar:Npn \@@_parse_unknown_option:n #1
  {
    \tl_if_empty:nTF {#1}
      { \clist_put_right:NV \l_@@_options_clist \l_keys_key_str }
      {
        \exp_args:NNx \clist_gput_right:Nn \l_@@_options_clist
          { \l_keys_key_str = \exp_not:n {#1} }
      }
  }

\tl_new:N \l_@@_tmpa_tl
\tl_new:N \l_@@_tmpb_tl
\NewDocumentCommand \chartopath { O{} m }
  {
    \group_begin:
    \keys_set:nn { char2path / chartopath } {#1}
    \IfBlankT {#1} { \tl_set:Nn \l_@@_draw_tl { black } }
    \bool_if:NTF \l_@@_rescan_bool
      {
        \tl_set_rescan:Nnn \l_@@_tmpa_tl 
          {
            \char_set_catcode:nn { \int_from_hex:n { 24 } } { 12 } % '$'
            \char_set_catcode:nn { \int_from_hex:n { 26 } } { 12 } % '&'
            \char_set_catcode:nn { \int_from_hex:n { 7e } } { 12 } % '~'
          } {#2}
      } { \tl_set:Nn \l_@@_tmpa_tl {#2} }
    \bool_lazy_and:nnT
      { !\clist_if_empty_p:N \l_@@_hfading_clist }
      { !\clist_if_empty_p:N \l_@@_vfading_clist }
      { \@@_msg_warning:n { fading } }
    \bool_lazy_or:nnTF
      {
        \bool_lazy_and_p:nn { \clist_if_empty_p:N \l_@@_hfading_clist } 
                            { \clist_if_empty_p:N \l_@@_vfading_clist }
      }
      {
        \bool_lazy_and_p:nn { !\clist_if_empty_p:N \l_@@_hfading_clist }
                            { !\clist_if_empty_p:N \l_@@_vfading_clist }
      }
      {
        \exp_args:Nno \@@_aux:nnnn
          {
            draw        = \l_@@_draw_tl,  line~width  = \l_@@_outline_tl,
            \tl_if_blank:VF \l_@@_fill_tl { fill      = \l_@@_fill_tl, },
            \clist_use:Nn \l_@@_options_clist { , }
          } { \l_@@_tmpa_tl } { \l_@@_char_clip_font } { \l_@@_scale_fp }
      }
      {
        \clist_if_empty:NF \l_@@_vfading_clist
          {
            \@@_continous_fading_parse_aux:NNN \l_@@_vfading_clist
              \l_@@_color_i_tl \l_@@_color_ii_tl
            \str_case_e:nn { - }
              {
                { \l_@@_color_i_tl }
                { \tl_set:Nn \l_@@_color_i_tl { transparent!0 } }
                { \l_@@_color_ii_tl }
                { \tl_set:Nn \l_@@_color_ii_tl { transparent!0 } }
              }
            \@@_aux:nnnn
              {
                top~color  = \l_@@_color_i_tl, bottom~color = \l_@@_color_ii_tl,
                line~width = \l_@@_outline_tl, draw = \l_@@_draw_tl,
                \clist_use:Nn \l_@@_options_clist { , }
              } { \l_@@_tmpa_tl } { \l_@@_char_clip_font } { \l_@@_scale_fp }
          }
        \clist_if_empty:NF \l_@@_hfading_clist
          {
            \@@_continous_fading_parse_aux:NNN \l_@@_hfading_clist
              \l_@@_color_i_tl \l_@@_color_ii_tl
            \exp_args:Ne \@@_continous_color_aux:nNN { \l_@@_tmpa_tl }
              \l_@@_continous_color_left_clist
              \l_@@_continous_color_right_clist
            \int_step_inline:nn { \exp_args:Ne \tl_count:n { \l_@@_tmpa_tl } }
              {
                \tl_set:Nn \l_@@_continous_color_tmpa_tl
                  { \clist_item:Nn \l_@@_continous_color_left_clist {##1} }
                \tl_set:Nn \l_@@_continous_color_tmpb_tl
                  { \clist_item:Nn \l_@@_continous_color_right_clist {##1} }
                \str_case_e:nnF { - }
                  {
                    { \l_@@_color_i_tl }
                    {
                      \exp_args:Nne \@@_aux:nnnn
                        {
                          draw        = \l_@@_draw_tl,
                          line~width  = \l_@@_outline_tl,
                          left~color  =
                            \l_@@_color_ii_tl!
                            \fp_eval:n { 100 - \l_@@_continous_color_tmpa_tl },
                          right~color =
                            \l_@@_color_ii_tl!
                            \fp_eval:n { 100 - \l_@@_continous_color_tmpb_tl },
                          \clist_use:Nn \l_@@_options_clist { , }
                        } { \exp_args:Ne \tl_item:nn { \l_@@_tmpa_tl } {##1} }
                        { \l_@@_char_clip_font } { \l_@@_scale_fp } 
                    }
                    { \l_@@_color_ii_tl }
                    {
                      \exp_args:Nne \@@_aux:nnnn
                        {
                          draw        = \l_@@_draw_tl,
                          line~width  = \l_@@_outline_tl,
                          left~color  =
                            \l_@@_color_i_tl!\l_@@_continous_color_tmpa_tl,
                          right~color =
                            \l_@@_color_i_tl!\l_@@_continous_color_tmpb_tl,
                          \clist_use:Nn \l_@@_options_clist { , }
                        } { \exp_args:Ne \tl_item:nn { \l_@@_tmpa_tl } {##1} }
                        { \l_@@_char_clip_font } { \l_@@_scale_fp } 
                    }
                  }
                  {
                   \exp_args:Nne \@@_aux:nnnn
                      {
                        draw        = \l_@@_draw_tl,
                        line~width  = \l_@@_outline_tl,
                        left~color  =
                          \l_@@_color_i_tl!
                          \l_@@_continous_color_tmpa_tl!
                          \l_@@_color_ii_tl,
                        right~color =
                          \l_@@_color_ii_tl!
                          \fp_eval:n { 100 - \l_@@_continous_color_tmpb_tl }!
                          \l_@@_color_i_tl,
                        \clist_use:Nn \l_@@_options_clist { , }
                      } { \exp_args:Ne \tl_item:nn { \l_@@_tmpa_tl } {##1} }
                      { \l_@@_char_clip_font } { \l_@@_scale_fp } 
                  }
              }
          }
      }
    \group_end:
    \clist_gclear:N \l_@@_options_clist
  }

\prg_generate_conditional_variant:Nnn \str_case:nn { v } { F }
\dim_new:N \l_@@_mono_width_dim
\dim_new:N \l_@@_mono_sep_dim
\cs_new_protected:Npn \@@_aux:nnnn #1#2#3#4
  {
    \exp_args:Ne \tl_map_inline:nn {#2}
      {
        \str_case:vnF { l_@@_font_#3_type_tl }
          {
            { serif }
            {
              \hbox_set:Nn \l_@@_glyph_box { \rmfamily ##1 }
              \dim_set:Nn \l_@@_mono_width_dim { 0pt }
              \dim_set:Nn \l_@@_mono_sep_dim { .52pt }
            }
            { sans }
            {
              \hbox_set:Nn \l_@@_glyph_box { \sffamily ##1 }
              \dim_set:Nn \l_@@_mono_width_dim { 0pt }
              \dim_set:Nn \l_@@_mono_sep_dim { .52pt }
            }
            { mono }
            {
              \hbox_set:Nn \l_@@_glyph_box { \ttfamily ##1 }
              \dim_set:Nn \l_@@_mono_width_dim { 5.124975pt }
              \dim_set:Nn \l_@@_mono_sep_dim { 0pt }
            }
          } { \hbox_set:Nn \l_@@_glyph_box {##1} }
        \@@_draw:neennn { \int_use:N \box_dp:N \l_@@_glyph_box }
          {#1} { \@@_data:nn {#3} {##1} } {#4}
          { \l_@@_mono_width_dim } { \l_@@_mono_sep_dim }
      }
  }
% TODO: Avoid nesting '\tikz' command; use the character's 
%       natural dimensions instead.
\cs_new_protected:Npn \@@_draw:nnnnnn #1#2#3#4#5#6
  {
    \tikz [ baseline = #1 ] \node
      [ above, minimum~width = #5 * \f@size/10, inner~sep = #6 * \f@size/10 ]
      { \tikz [ scale = \prop_item:Ne \c_@@_scale_prop { \g_@@_scale_tl } *
                        \fp_eval:n { \f@size/8.4 * \c_@@_global_scale_fp * #4 }
              ] \path [#2] #3; };
  }
\cs_generate_variant:Nn \@@_draw:nnnnnn { neennn }
\cs_new:Npn \@@_data:nn #1#2
  {
    \prop_if_in:cnTF { c_@@_tikz_#1_data_prop } {#2}
      { \prop_item:cn { c_@@_tikz_#1_data_prop } {#2} }
      { node [ draw, rounded~corners = .5pt, inner~xsep = -.06pt ] {?} }
    % \file_if_exist_input:n { \c_@@_tikz_folder_tl/#2.pgf.coor }
  }
\cs_generate_variant:Nn \@@_data:nn { ne, ee }

\cs_new_protected:Npn \@@_continous_fading_parse_aux:NNN #1#2#3
  {
    \group_begin: \exp_args:NNNe \group_end:
      \tl_set:Nn #2 { \clist_item:Nn #1 { 1 } }
    \group_begin: \exp_args:NNNe \group_end:
      \tl_set:Nn #3 { \clist_item:Nn #1 { 2 } }
  }

\cs_new_protected:Npn \@@_continous_color_aux:nNN #1#2#3
  {
    \int_step_inline:nn { \tl_count:n {#1} }
      {
        \clist_put_right:Ne #2
          {
            \fp_eval:n
              { 100 - (##1 - 1) * 100 / \tl_count:n {#1} }
          }
        \clist_put_right:Ne #3
          { \fp_eval:n { 100 - ##1 * 100 / \tl_count:n {#1} } }
      }
  }

% image clip
% TODO: change 'height' to the height of char
\keys_define:nn { char2path / chartoclip }
  {
    font      .tl_set:N  = \l_@@_char_clip_font,
      font    .initial:n = { lmm },
    image     .tl_set:N  = \l_@@_image_tl,
      image   .initial:n = { example-image },
    scale     .fp_set:N  = \l_@@_char_clip_scale_fp,
      scale   .initial:n = { 1 },
    anchor    .tl_set:N  = \l_@@_image_anchor_tl,
      anchor  .initial:n = { center },
    offset    .tl_set:N  = \l_@@_image_anchor_offset_tl,
      offset  .initial:n = { (0pt, 0pt) },
    height    .dim_set:N = \l_@@_image_height_dim,
      height  .initial:n = { 3cm },
  }
\NewDocumentCommand \chartoclip { O{} m }
  {
    \group_begin:
    \keys_set:nn { char2path / chartoclip }{#1}
    \exp_args:Nee \@@_image_clip_aux:nnnnnn
      { \prop_item:ce { c_@@_tikz_ \l_@@_char_clip_font _data_prop } { #2 } }
      { \l_@@_image_anchor_offset_tl }
      { \l_@@_image_tl               }
      { \l_@@_image_height_dim       }
      { \l_@@_char_clip_scale_fp     }
      { \l_@@_image_anchor_tl        }
    \group_end:
  }
\cs_new:Npn \@@_image_clip_aux:nnnnnn #1#2#3#4#5#6
  {% #1:path data;    #2:anchor offset;  #3:image;
    \tikz [ scale = \fp_eval:n { \c_@@_global_scale_fp*#5 } ]
      \path [ path~picture = {
              \node at ($(path~picture~bounding~box.#6) + #2$)
                { \includegraphics [ height = #4 ] {#3} };
          } ] #1;
  }% #4:image height; #5:scale;          #6:anchor

\file_input_stop:
% </sty>